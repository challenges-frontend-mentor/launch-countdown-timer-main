@use "../config/variables" as *;
@use "sass:math";
$square: 140px;
$square-movile: 70px;
$square-border-movile: 5px;
$square-border: 10px;
$point-black-movile: 6px;
$point-black: 20px;

.number-flip-card{
    max-width: 100%;
    position: absolute;
    width: $square-movile;
    height: $square-movile;
    transform: perspective(450px);
    transform-style: preserve-3d;
    border-radius: $square-border-movile;
    top: 0;
    
    @media screen and (min-width:1440px) {
        border-radius: $square-border;
        width:$square;
        height: $square;
    }

    &-top,
    &-bottom{
        width: 100%;
        height: 50%;
    }

    
    
    &-top{
        background-color: var(--Dark-desaturated-blue-top);
        border-top-left-radius: $square-border-movile;
        border-top-right-radius: $square-border-movile;
        overflow: hidden;
        transform-origin: bottom;
        transform:rotateX(0deg);
        
        @media screen and (min-width:1440px) {
            border-top-left-radius: $square-border;
            border-top-right-radius: $square-border;
        }
        
        &::after{
            position: relative;
            content: attr(data-number);
            color: #d15170;
            font-size: 36px;
            bottom: -11px;
            
            @media screen and (min-width:1440px) {
                bottom: -18px;
                font-size: 80px;
            }
        }

        &::before{
            content: "";
            display:block;
            position: absolute;
            width: $point-black-movile;
            height: $point-black-movile;
            background-color:var(--Very-dark-mostly-black-blue);
            transform:translateY(-50%);
            top:100%;
            right: math.div($point-black-movile, -2);
            box-shadow: -$square-movile 0px var(--Very-dark-mostly-black-blue) ;
            border-radius: 50%;   

            @media screen and (min-width:1440px) {
                box-shadow: -$square 0px var(--Very-dark-mostly-black-blue) ;
                width: $point-black;
                height: $point-black;
                right: math.div($point-black, -2);
            }
        }
    }
    
    &-bottom{
        background-color: var(--Dark-desaturated-blue-bottom);
        border-bottom-left-radius: $square-border-movile;
        border-bottom-right-radius: $square-border-movile;
        transform:rotateX(0deg);
        transform-origin: top;
        overflow: hidden;
        
        @media screen and (min-width:1440px) {
            border-bottom-left-radius: $square-border;
            border-bottom-right-radius: $square-border;
        }

        &::after{
            position: relative;
            content: attr(data-number);
            color: var(--Soft-red);
            font-size: 36px;
            bottom: 24px;
            
            @media screen and (min-width:1440px) {
                font-size: 80px;
                bottom:52px;
        
            }
        }

        &::before{
            content: "";
            display:block;
            position: absolute;
            width: $point-black-movile;
            height: $point-black-movile;
            background-color:var(--Very-dark-mostly-black-blue);
            transform:translateY(-50%);
            top:0;
            right: math.div($point-black-movile, -2);
            box-shadow: -$square-movile 0px var(--Very-dark-mostly-black-blue) ;
            border-radius: 50%;   

            @media screen and (min-width:1440px) {
                box-shadow: -$square 0px var(--Very-dark-mostly-black-blue) ;
                width: $point-black;
                height: $point-black;
                right: math.div($point-black, -2);
            }
        }
    }
}

.clock-animate-top{
    animation: animate 1s linear 0s 1 normal none running;
}

.clock-animate-bottom{
    animation: animate-bottom 0.250s  linear 0s 1 normal none running ;

}

@keyframes animate{
    0%{
        transform: rotateX(0deg);
    }

    25%{
        transform: rotateX(-90deg);
    }

    50%{
        transform: rotateX(-90deg);
    }

    100%{
        transform: rotateX(-90deg);
    }

}


@keyframes animate-bottom {
    0%{transform: rotateX(90deg);
}

    50%{
        transform: rotateX(0deg);
      
    }

     100%{
        transform: rotateX(0deg);
    
    }
}